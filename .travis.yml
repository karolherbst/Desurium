language: cpp
compiler:
  - gcc
  - clang
env:
  - CFLAGS=--coverage CXXFLAGS=--coverage WITH_COVERITY=0
matrix:
  include:
    - compiler: gcc
      env: WITH_COVERITY=1 TOOL_BASE=/tmp/coverity-scan PATH=/tmp/coverity-scan/cov-analysis/bin:$PATH
before_install:
  - sudo apt-get update
  - sudo apt-get install gcc-multilib libnotify-dev libv8-dev libboost1.48-dev libboost-date-time1.48-dev libboost-filesystem1.48-dev libboost-thread1.48-dev libboost-system1.48-dev libboost-test1.48-dev
  - wget "http://ppa.launchpad.net/fransschreuder1/usbpicprog-stable/ubuntu/pool/main/w/wxwidgets2.9/libwxgtk2.9-dev_2.9.3-1_amd64.deb"
  - wget "http://ppa.launchpad.net/fransschreuder1/usbpicprog-stable/ubuntu/pool/main/w/wxwidgets2.9/wx2.9-headers_2.9.3-1_amd64.deb"
  - wget "http://ppa.launchpad.net/fransschreuder1/usbpicprog-stable/ubuntu/pool/main/w/wxwidgets2.9/libwxgtk2.9-0_2.9.3-1_amd64.deb"
  - wget "http://ppa.launchpad.net/fransschreuder1/usbpicprog-stable/ubuntu/pool/main/w/wxwidgets2.9/libwxbase2.9-dev_2.9.3-1_amd64.deb"
  - wget "http://ppa.launchpad.net/fransschreuder1/usbpicprog-stable/ubuntu/pool/main/w/wxwidgets2.9/libwxbase2.9-0_2.9.3-1_amd64.deb"
  - sudo dpkg --install libwxbase2.9-0_2.9.3-1_amd64.deb
  - sudo dpkg --install libwxgtk2.9-0_2.9.3-1_amd64.deb
  - sudo dpkg --install wx2.9-headers_2.9.3-1_amd64.deb
  - sudo dpkg --install libwxbase2.9-dev_2.9.3-1_amd64.deb
  - sudo dpkg --install libwxgtk2.9-dev_2.9.3-1_amd64.deb
  - if [ "$WITH_COVERITY" = "0" ]; then sudo pip install cpp-coveralls --use-mirrors ; fi
  - if [ "$WITH_COVERITY" = "1" ]; then mkdir -p $TOOL_BASE; cd $TOOL_BASE; fi
  - if [ "$WITH_COVERITY" = "1" ]; then wget -O coverity_tool.tar.gz https://scan.coverity.com/build_tool/cov-analysis-linux64-6.6.1.tar.gz ; fi
  - if [ "$WITH_COVERITY" = "1" ]; then tar xaf coverity_tool.tar.gz ; fi
  - if [ "$WITH_COVERITY" = "1" ]; then TOOL_DIR=`find . -type d -name 'cov-analysis*'` ; ln -s $TOOL_DIR $TOOL_BASE/cov-analysis ; fi
  - if [ "$WITH_COVERITY" = "1" ]; then cd - ; fi
script:
  - cmake . -DBUILD_CEF=off -DWITH_ARES=off -DDEBUG=on -DFORCE_BUNDLED_WXGTK=off -DWITH_GTEST=ON -DBUILD_TESTS=ON
  - if [ "$WITH_COVERITY" = "0" ]; then make -j4 ; fi
  - if [ "$WITH_COVERITY" = "1" ]; then make gtest breakpad tinyxml2 sqlite3x desura_flashhost desura_flashwrapper -j4 ; cov-build --dir cov-int make -j4 ; fi
  - ctest --output-on-failure .
  - if [ "$WITH_COVERITY" = "1" ]; then tar czvf desurium.tgz cov-int ; fi
after_success:
  - if [ "$WITH_COVERITY" = "0" ]; then coveralls --exclude third_party --exclude src/tests --exclude breakpad-prefix --exclude gtest-prefix --exclude fetch_cef-prefix/src/fetch_cef/tests --exclude fetch_cef-prefix/src/fetch_cef/libcef --exclude CMakeFiles --exclude-pattern 'CMake[^\.]*\.c(?:pp)?' --exclude-pattern '[^\.]*\.h' > /dev/null ; fi
  - if [ "$WITH_COVERITY" = "1" ]; then curl --form project=Desurium --form token=reO9Ub2hZfQSABH5LBKIpA --form email=coverty@karolherbst.de --form file=@desurium.tgz --form version=$TRAVIS_JOB_ID --form description="Travis auto build" http://scan5.coverity.com/cgi-bin/upload.py ; fi
notifications:
  irc:
    channels:
      - "irc.freenode.org#desura"
    template:
      - "%{repository} (%{commit}) by %{author} : %{message} %{foo} "
      - "Build details: %{build_url}"
      - "Latest commit: %{compare_url}"
    on_success: change
    on_failure: change
    skip_join: true
